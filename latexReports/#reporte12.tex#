%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  para un artículo en LaTeX en español.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[]{article}
% Esto es para poder escribir acentos directamente:
\usepackage[latin1]{inputenc}
% Esto es para que el LaTeX sepa que el texto estÃ¡ en espaÃ±ol:
\usepackage[spanish]{babel}
\decimalpoint
%para cambiar los margenes del texto
\usepackage[a4paper,left=3cm,right=2cm,top=2.5cm,bottom=2.5cm]{geometry}
\usepackage{hyperref}
\usepackage{graphicx}
% Paquetes de la AMS:
%\usepackage{amsmath, amsthm, amsfonts,float}
\graphicspath{ {../Tarea_12/images/} }
\usepackage[parfill]{parskip}

%--------------------------------------------------------------------------
\title{Reporte práctica siete: Búsqueda Local}
\author{José Anastacio Hernández Saldaña\\
  \small Posgrado de Ingeniería de Sistemas\\
  \small 1186622\\ 
  \small jose.hernandezsld@uanl.edu.mx
}

\begin{document}

\maketitle

\abstract{Este es un reporte sobre la práctica doce con respecto al
  tema de redes neuronales que se realizó en la clase de
  Simulación de sistemas, cómputo paralelo en R.}


\section{Tarea: Paralelizar la red neuronal}

Las redes neuronales son un modelo computacional de la simulación de
una neurona en un cerebro biologico. Las neuronas responden a
estimulos y si la cantidad de estímulos pasa de cierto umbral la
neurona se activa generando una respuesta o salida. Las neuronas
artificiales se conectan a entradas, donde cada entrada entrada tiene
un valor de peso de importancia y de acuerdo a una función de
activación que considera las entradas la neurona artificial se activa
y genera una respuesta. De esta manera las neuronas artificiales
pueden reaccionar a patrones, donde si se ajustan los pesos de las
entradas las neuronas artificiales pueden simular aprendizaje.

Para esta práctica se busca paralelizar el código de la
\href{http://elisa.dyndns-web.com/teaching/comp/par/p12.html}{página
  del curso} donde se busca que una red neuronal aprenda los digitos
del cero al nueve dibujados en una cuadrícula de $5\times 3$, donde
cada cuadro tiene un valor verdaderosi esta activada , y falso si esta
descativada. Se cuenta con el modelo de se reprentaria los digitos en
al cuadrícula, este modelo considera tres posibilidades, que el cuadro
este considerado en la reprencion del número, que el cuadro pueda
estar o no presente en al representación, y que el cuado no esta
presente en la representación. A cada representación se la asgina un
valor de probabilidad.

\begin{figure}[ht!]
  \centering
  \includegraphics[width=0.6\linewidth]{p7_2d}
  \caption{Gráfica en tres dimensiones de $g(x,y)$}
  \label{fig::figura1} 
\end{figure}

\subsection{Diseño del Experimento}

Para el experimento se tomó como base el código de la
\href{http://elisa.dyndns-web.com/teaching/comp/par/p7.html}{página
  del curso}, donde se encuentra la búsqueda local para maximizar la
función ya programada. esta búsqueda local es una búsqueda voraz o
\emph{greedy} , es decir, dado un valor de $x$ y $y$ busca un mejor
valor dentro de un conjunto valores $x$ y $y$ vecinos, si alguno de
los vecinos al ser evaluado con la función $g$ nos da un valor mayor
lo toma como solución candidata y busca dentro de los vecinos de ese
nuevo valor, esto lo repite hasta no encontrar mejores valores hacia
los cuales desplazarse.


Uno de los principales problemas de este tipo de búsqueda local es que
fácilmente puede converger a un óptimo local, es decir, una cota
superior para un intervalo contenido en el dominio. Dado que toda cota es
un óptimo local son necesarios métodos que nos ayuden a guiar la
búsqueda para evitar óptimos locales. Por lo que se decidió utilizar
esta búsqueda desde varios puntos generados al azar dentro del
dominio, esto para tener una diversidad de valores iniciales y con la
ayuda de la búsqueda local explorar el espacio de soluciones. Este
método es conocido como un método multiarranque; como cada búsqueda
es independiente a las demás, se decidió paralelizar este procedimiento.

Al estar trabajando con una función tridimensional, es necesario
utilizar representaciones de dos dimensiones que faciliten la
visualización del proceso de búsqueda, por lo que se utilizó una
gráfica de contorno de superficie, para la representación y poder
trazar algunos caminos de la búsqueda señalando los inicios y fines,
podemos observar un ejemplo de este tipo de gráfica en la figura
\ref{fig::figura2}.
\begin{figure}[ht!]
  \centering
  \includegraphics[width=0.7\linewidth]{p7_flat_2}
  \caption{Gráfica de contorno de superficie de $g(x,y)$}
  \label{fig::figura2} 
\end{figure}

Como podemos observar, el valor de $g(x,y)$ se aprecia a partir de la
diferencia de color dentro de la gráfica, donde las regiones rosas con
las zonas con menor valor de $g$ y las azules con un mayor valor.

Para comenzar la experimentación, se utilizó una computadora con las
siguientes especificaciones, Procesador Intel Core i7-4790 CPU @
3.6GHz $\times$ 8 y memoria RAM de 24 GB utilizando solamente los
cuatro núcleos físicos disponibles. Se tomó el valor máximo obtenido de la página de
\href{https://www.wolframalpha.com/input/?i=max((x+%2B+0.5)%5E4+-+30+*+x%5E2+-+20+*+x+%2B+(y+%2B+0.5)%5E4+-+30+*+y%5E2+-+20+*+y)+over+%5B-6,5%5D}{Wolframalpha}
dentro el intervalo del dominio, el valor encuentrado fue $g(x=5,y=5) \approx 130.12$,
con esta información, se puede calcular la separación entre el valor encontrado
con respecto al máximo a partir de la  fórmula $ sep = \frac{vr-vc}{vr} \times 100$.

Se utilizaron los siguientes parámetros para la experimentación, el
multiarranque fue de 100 replicas, con una distancia para la elección
de vecinos de 0.3 unidades, el tiempo máximo de cada búsqueda fue de
100 pasos, el código esta disponible en el
\href{https://github.com/ppGodel/Parallel_R/tree/master/Tarea_6}{repositorio
  git} del curso.

\subsection{Resultados}

Al revisar los resultados de la experimentación, que están graficados
en la figura \ref{fig::figura3}, podemos apreciar algunas trayectorias
en rojo, que representan caminatas que no alcanzaron el optimo global
y nos permite ver la trayectoria que tomó la búsqueda, los puntos
verdes son las coordenadas donde terminaron cada uno de las 100
caminatas y como podemos apreciar, convergieron en cada uno de los
ocho óptimos locales disponibles en el dominio, en azul podemos ver la
trayectoria que siguió búsqueda que alcanzo el optimo global.

\begin{figure}[ht!]
  \centering
  \includegraphics[width=0.7\linewidth]{p7_Tarea_1}
  \caption{Resultado de trayectorias del método multiarranque}
  \label{fig::figura3} 
\end{figure}

El valor de la separación fue cero, por lo que se encontró el optimo
global, en el punto encontrado en wolframalpha, es importante apreciar
que tardó solo 13 iteraciones para llegar al valor óptimo y que el
lugar del inicio influye hacia que optimo local converge la búsqueda.


\section{Extra Dos: Recocido Simulado}

Para el extra dos de esta tarea se cambiara la estrategia para escapar
de óptimos locales utilizando el método de recocido simulado. El cual
esta basado en en el proceso de cristalización de metales calientes al
enfriarse, donde las moléculas pasan de un estado de mucha energía a
uno de menor energía.

Este método funciona con un valor de temperatura$T$ que tiene un valor
inicial $g(x,y)$, al realizar la búsqueda de un vecino, esta se hace
de la siguiente manera, se elige una solución vecina al azar
$g(x',y')$ y se revisa si esta solución ofrece una mejora comparada
con el mejor valor obtenido hasta el momento, de ser asi, se toma ese
valor para continuar la búsqueda en sus vecinos, si el vecino elegido
no es mejor, se calculara un delta $\delta = g(x,y) - g(x',y')$ tal
que como este valor es negativo al no ofrecer mejora, se permitiría
aceptar buscar dentro de los vecinos de ese punto si al obtener un
valor aleatorio de una distribución uniforme de [0,1] este valor es
mayor al calculado por la probabilidad obtenida por la distribución
$e^{\frac{\delta}{T}}$, al aceptar este valor que no mejora el valor
de la búsqueda, hace que el valor de temperatura disminuya en
proporción a un valor $\varepsilon$ tal que $0\leq \varepsilon < 1$
por lo que esta flexibilidad de aceptar valores no mejores es lo que
nos permite escapar de óptimos locales dentro del dominio.



\subsection{Diseño del Experimento}

Los parámetros utilizados fueron los mismos que los del experimento
anterior, la diferencia es en los parámetros del recocido simulado, se
tomaron los valores de temperatura $T = 90$ y $\varepsilon = 0.9$.

\subsection{Resultados}

El resultado obtenido de la experimentación se puede ver en la figura
\ref{fig::figura4} donde se puede apreciar como las trayectorias ya no
van directamente hacia el óptimo local y explorar el espacio de
soluciones, esto es notorio en el valor óptimo encontrado marcado con
azul, ya que por la posición donde inicio, usando una búsqueda local
como la realizada en el punto anterior, hubiera convergido hacia el
optimo local cercano al punto $(5,0)$ pero debido a que pudo moverse
por otras regiones es que pudo converger hacia el óptimo global.

\begin{figure}[ht!]
  \centering
  \includegraphics[width=0.7\linewidth]{p7_Tarea_1_E2}
  \caption{Resultado de trayectorias del método recocido simulado}
  \label{fig::figura4} 
\end{figure}

Por otra parte es importante señalar que a diferencia del método
multiarranque, las terminaciones de las búsquedas no convergían todas
en alguno de los óptimos locales del dominio, sino que terminaban
cerca de alguno de ellos, esto debido a que el valor de temperatura aún
era alto al momento de terminar las iteraciones máximas permitidas, de
tener una temperatura más baja, las búsquedas comenzarían a converger
hacia los óptimos locales ya que comienzan a comportarse como
búsquedas voraces, pero dejan de explorar el espacio de soluciones.

Además, la cantidad de iteraciones necesarias para encontrar el valor
óptimo es superior a la requerida por el multiarranque, esto debido al
valor de temperatura que al permitir valores no mejores, hace que la
búsqueda demore más en converger hacia un óptimo local.

\section{Conclusiones}

Se pudo observar las diferencias entre dos métodos de búsqueda, además
de paralelizar en ambas el múltiple inicio de las valores iniciales
favoreciendo a la rapidez de los resultados, se pudieron observar los
efectos del recocido simulado y conocer opciones de visualización para
gráficas en tres dimensiones.

\end{document}
