library(parallel)
dim = 10 
num =  dim^2
pv = 0.01
suppressMessages(library("sna"))


actual <- matrix(round( 0.49999+(pv)-runif(num)), nrow=dim, ncol=dim)
#print(actual)
 
paso <- function(pos) {
    fila <- floor((pos - 1) / dim) + 1
    columna <- ((pos - 1) %% dim) + 1
    vecindad <-  actual[max(fila - 1, 1) : min(fila + 1, dim),
                        max(columna - 1, 1): min(columna + 1, dim)]
    return(1 * ((sum(vecindad) - actual[fila, columna]) == 3))
}
 
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "dim")
clusterExport(cluster, "paso")
i = 0
for (iteracion in 1:dim**2) {
    i = i + 1
    clusterExport(cluster, "actual")
    siguiente <- parSapply(cluster, 1:num, paso)
    if (sum(siguiente) == 0) { # todos murieron
        print("Ya no queda nadie vivo.")
        break;
    }
    actual <- matrix(siguiente, nrow=dim, ncol=dim, byrow=TRUE)
    
}
if(i == dim**2)
stopCluster(cluster)